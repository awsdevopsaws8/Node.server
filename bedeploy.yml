name: NodeJS TS Backend Application Deployment via PM2

on:
  workflow_run:
    workflows: ["NodeJS TS Frontend Application Deployment via Nginx"]  # 👈 This must match the name in workflow-a.yml
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    environment: production # 🔐 Enables environment-specific secrets

    steps:
      - name: Clone the project
        uses: actions/checkout@v3
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/ds.pem
          chmod 600 ~/.ssh/ds.pem
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
            
      - name: Creating PM2 config file to pass .env content
        env:
          RAW_NON_SEN: ${{ vars.BE_ENV_NON_SEN_DATA }}
          RAW_SEN: ${{ secrets.BE_ENV_SEN_DATA }}
        run: |
          # Indent the multiline values and store them
          NON_SEN=$(echo "$RAW_NON_SEN" | sed 's/^/      /')
          SEN=$(echo "$RAW_SEN" | sed 's/^/      /')
          # Now write the config with correct indentation
          cat <<EOF > ./backend/ecosystem.config.js
          module.exports = {
            apps: [
              {
                name: 'backend',
                script: 'dist/server.js',
                env: {
          $NON_SEN
          $SEN
                }
              }
            ]
          };
          EOF
            
      - name: Building Backend
        run: |
          cd ./backend
          echo "${{ vars.BE_ENV_NON_SEN_DATA }}" > .env
          echo "${{ secrets.BE_ENV_SEN_DATA }}" >> .env
          npm i
          npm run build
          rm -rf .env
      
      - name: Deploying Backend
        run: |
          rsync -avz --delete -e "ssh -i ~/.ssh/ds.pem" ./backend/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/home/${{ secrets.SERVER_USER }}/backend/
          ssh -i ~/.ssh/ds.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<EOF
            cd backend/
            sudo pm2 delete backend
            sudo pm2 start ecosystem.config.js
            sudo pm2 save
            sudo rm -rf ecosystem.config.js
            sudo pm2 restart backend
          EOF
      
      - name: Cleanup SSH key
        run: rm -f ~/.ssh/ds.pem

